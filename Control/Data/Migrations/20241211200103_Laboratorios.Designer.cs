// <auto-generated />
using System;
using Control.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Control.Migrations
{
    [DbContext(typeof(AplicacionDbContext))]
    [Migration("20241211200103_Laboratorios")]
    partial class Laboratorios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Control.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Control.Data.Entidades.AsignacionRecursos", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsignacion"));

                    b.Property<int>("IdIncidencias")
                        .HasColumnType("int");

                    b.Property<int>("IdRecursos")
                        .HasColumnType("int");

                    b.Property<double>("cantidadUtilizada")
                        .HasColumnType("float");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("IdIncidencias");

                    b.HasIndex("IdRecursos");

                    b.ToTable("asignacionRecursos");
                });

            modelBuilder.Entity("Control.Data.Entidades.Equipos", b =>
                {
                    b.Property<int>("IdEquipos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipos"));

                    b.Property<int>("IdLaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("LaboratoriosIdLaboratorio")
                        .HasColumnType("int");

                    b.Property<float>("estado")
                        .HasColumnType("real");

                    b.Property<DateTime>("fecha_inst")
                        .HasColumnType("datetime2");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreEquipos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEquipos");

                    b.HasIndex("LaboratoriosIdLaboratorio");

                    b.ToTable("equipos");
                });

            modelBuilder.Entity("Control.Data.Entidades.HistorialIncidencias", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FechaHistorial")
                        .HasColumnType("date");

                    b.Property<int>("IdIncidencias")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdIncidencias");

                    b.ToTable("historialIncidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Incidencias", b =>
                {
                    b.Property<int>("IdIncidencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIncidencias"));

                    b.Property<DateTime>("FechaReportado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaResolucion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEquipos")
                        .HasColumnType("int");

                    b.Property<int>("IdLaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("descInc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIncidencias");

                    b.HasIndex("IdEquipos");

                    b.HasIndex("IdLaboratorio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Laboratorios", b =>
                {
                    b.Property<int>("IdLaboratorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLaboratorio"));

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("horario")
                        .HasColumnType("time");

                    b.Property<string>("nombreLab")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLaboratorio");

                    b.ToTable("laboratorios");

                    b.HasData(
                        new
                        {
                            IdLaboratorio = 1,
                            capacidad = 50,
                            horario = new TimeOnly(8, 0, 0),
                            nombreLab = "Laboratorio A",
                            ubicacion = "Edificio 1"
                        },
                        new
                        {
                            IdLaboratorio = 2,
                            capacidad = 40,
                            horario = new TimeOnly(9, 0, 0),
                            nombreLab = "Laboratorio B",
                            ubicacion = "Edificio 2"
                        });
                });

            modelBuilder.Entity("Control.Data.Entidades.Recursos", b =>
                {
                    b.Property<int>("IdRecursos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecursos"));

                    b.Property<double>("cantidad")
                        .HasColumnType("float");

                    b.Property<string>("desRec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreRec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRecursos");

                    b.ToTable("recursos");

                    b.HasData(
                        new
                        {
                            IdRecursos = 1,
                            cantidad = 5.0,
                            desRec = "Proyector multimedia",
                            nombreRec = "Proyector"
                        },
                        new
                        {
                            IdRecursos = 2,
                            cantidad = 20.0,
                            desRec = "Computadoras de escritorio",
                            nombreRec = "PC"
                        });
                });

            modelBuilder.Entity("Control.Data.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("correoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("rolUsuario")
                        .HasColumnType("real");

                    b.Property<float>("tipoUsuario")
                        .HasColumnType("real");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            correoUsuario = "juan.perez@upla.edu",
                            nombreUsuario = "Juan Perez",
                            rolUsuario = 10f,
                            tipoUsuario = 1f
                        },
                        new
                        {
                            IdUsuario = 2,
                            correoUsuario = "maria.lopez@upla.edu",
                            nombreUsuario = "Maria Lopez",
                            rolUsuario = 20f,
                            tipoUsuario = 2f
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Control.Data.Entidades.AsignacionRecursos", b =>
                {
                    b.HasOne("Control.Data.Entidades.Incidencias", "Incidencias")
                        .WithMany("AsignacionRecursos")
                        .HasForeignKey("IdIncidencias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Control.Data.Entidades.Recursos", "Recursos")
                        .WithMany("AsignacionRecursos")
                        .HasForeignKey("IdRecursos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidencias");

                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("Control.Data.Entidades.Equipos", b =>
                {
                    b.HasOne("Control.Data.Entidades.Laboratorios", "Laboratorios")
                        .WithMany("Equipos")
                        .HasForeignKey("LaboratoriosIdLaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorios");
                });

            modelBuilder.Entity("Control.Data.Entidades.HistorialIncidencias", b =>
                {
                    b.HasOne("Control.Data.Entidades.Incidencias", "Incidencias")
                        .WithMany("HistorialIncidencias")
                        .HasForeignKey("IdIncidencias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Incidencias", b =>
                {
                    b.HasOne("Control.Data.Entidades.Equipos", "Equipos")
                        .WithMany("Incidencias")
                        .HasForeignKey("IdEquipos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Control.Data.Entidades.Laboratorios", "Laboratorios")
                        .WithMany("Incidencias")
                        .HasForeignKey("IdLaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Control.Data.Entidades.Usuario", "Usuario")
                        .WithMany("Incidencias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipos");

                    b.Navigation("Laboratorios");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Control.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Control.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Control.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Control.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Control.Data.Entidades.Equipos", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Incidencias", b =>
                {
                    b.Navigation("AsignacionRecursos");

                    b.Navigation("HistorialIncidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Laboratorios", b =>
                {
                    b.Navigation("Equipos");

                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Recursos", b =>
                {
                    b.Navigation("AsignacionRecursos");
                });

            modelBuilder.Entity("Control.Data.Entidades.Usuario", b =>
                {
                    b.Navigation("Incidencias");
                });
#pragma warning restore 612, 618
        }
    }
}
