// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Control.Migrations
{
    [DbContext(typeof(AplicacionDbContext))]
    [Migration("20241211220457_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Control.Data.Entidades.AsignacionRecursos", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsignacion"));

                    b.Property<int>("CantidadUtilizada")
                        .HasColumnType("int");

                    b.Property<int>("IdIncidencias")
                        .HasColumnType("int");

                    b.Property<int>("IdRecursos")
                        .HasColumnType("int");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("IdIncidencias");

                    b.HasIndex("IdRecursos");

                    b.ToTable("asignacionRecursos");
                });

            modelBuilder.Entity("Control.Data.Entidades.Equipos", b =>
                {
                    b.Property<int>("IdEquipos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipos"));

                    b.Property<DateTime>("FechaInst")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLaboratorio")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreEquipos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEquipos");

                    b.HasIndex("IdLaboratorio");

                    b.ToTable("equipos");
                });

            modelBuilder.Entity("Control.Data.Entidades.HistorialIncidencias", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdIncidencias")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioResponsable")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdIncidencias");

                    b.ToTable("historialIncidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Incidencias", b =>
                {
                    b.Property<int>("IdIncidencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIncidencias"));

                    b.Property<string>("DescInc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaReporte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSolucion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEquipos")
                        .HasColumnType("int");

                    b.Property<int>("IdLaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdIncidencias");

                    b.HasIndex("IdEquipos");

                    b.HasIndex("IdLaboratorio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Laboratorios", b =>
                {
                    b.Property<int>("IdLaboratorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLaboratorio"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("NombreLab")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdLaboratorio");

                    b.ToTable("laboratorios");
                });

            modelBuilder.Entity("Control.Data.Entidades.Recursos", b =>
                {
                    b.Property<int>("IdRecursos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecursos"));

                    b.Property<string>("DesRec")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NombreRec")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdRecursos");

                    b.ToTable("recursos");
                });

            modelBuilder.Entity("Control.Data.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RolUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Control.Data.Entidades.AsignacionRecursos", b =>
                {
                    b.HasOne("Control.Data.Entidades.Incidencias", "Incidencias")
                        .WithMany("AsignacionRecursos")
                        .HasForeignKey("IdIncidencias")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Control.Data.Entidades.Recursos", "Recursos")
                        .WithMany("AsignacionRecursos")
                        .HasForeignKey("IdRecursos")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Incidencias");

                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("Control.Data.Entidades.Equipos", b =>
                {
                    b.HasOne("Control.Data.Entidades.Laboratorios", "Laboratorio")
                        .WithMany("Equipos")
                        .HasForeignKey("IdLaboratorio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("Control.Data.Entidades.HistorialIncidencias", b =>
                {
                    b.HasOne("Control.Data.Entidades.Incidencias", "Incidencias")
                        .WithMany("HistorialIncidencias")
                        .HasForeignKey("IdIncidencias")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Incidencias", b =>
                {
                    b.HasOne("Control.Data.Entidades.Equipos", "Equipos")
                        .WithMany("Incidencias")
                        .HasForeignKey("IdEquipos")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Control.Data.Entidades.Laboratorios", "Laboratorio")
                        .WithMany("Incidencias")
                        .HasForeignKey("IdLaboratorio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Control.Data.Entidades.Usuario", "Usuario")
                        .WithMany("Incidencias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipos");

                    b.Navigation("Laboratorio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Control.Data.Entidades.Equipos", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Incidencias", b =>
                {
                    b.Navigation("AsignacionRecursos");

                    b.Navigation("HistorialIncidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Laboratorios", b =>
                {
                    b.Navigation("Equipos");

                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Control.Data.Entidades.Recursos", b =>
                {
                    b.Navigation("AsignacionRecursos");
                });

            modelBuilder.Entity("Control.Data.Entidades.Usuario", b =>
                {
                    b.Navigation("Incidencias");
                });
#pragma warning restore 612, 618
        }
    }
}
