@page "/incidencias/modificar/{id:int}"
@inject IIncidenciasRepositorio _incidenciasRepositorio
@inject NavigationManager NavigationManager

<h3>Modificar Incidencia</h3>

<EditForm Model="incidencia" OnValidSubmit="ModificarIncidencia">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="descInc">Descripción</label>
        <InputText id="descInc" class="form-control" @bind-Value="incidencia.DescInc" />
    </div>

    <div class="form-group">
        <label for="fechaReporte">Fecha de Reporte</label>
        <InputDate id="fechaReporte" class="form-control" @bind-Value="incidencia.FechaReporte" />
    </div>

    <div class="form-group">
        <label for="fechaSolucion">Fecha de Solución</label>
        <InputDate id="fechaSolucion" class="form-control" @bind-Value="incidencia.FechaSolucion" />
    </div>

    <button type="submit" class="btn btn-primary">Modificar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter] public int id { get; set; }
    private Incidencias incidencia = new Incidencias();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Recupera todos los productos
            var incidencias = await _incidenciasRepositorio.GetAll();

            // Filtra el producto específico por su Id
            incidencia = incidencias.FirstOrDefault(p => p.IdIncidencias == id);

            if (incidencia == null)
            {
                Console.WriteLine($"No se encontró el producto con Id {id}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar el producto: {ex.Message}");
        }
    }

    private async Task ModificarIncidencia()
    {
        try
        {
            if (incidencia != null)
            {
                Console.WriteLine($"Modificando incidencia: {incidencia.DescInc}, {incidencia.FechaReporte}, {incidencia.FechaSolucion}");
                await _incidenciasRepositorio.Modificar(incidencia);
                Console.WriteLine("Incidencia modificada correctamente.");
                NavigationManager.NavigateTo("/incidencias");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al modificar la incidencia: {ex.Message}");
        }
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/incidencias");  // Redirigir al listado si se cancela
    }
}
