
@page "/incidencias/modificar/{id:int}"
@inject IIncidenciasRepositorio _incidenciasRepositorio
@inject NavigationManager NavigationManager
@inject Notificacion Notificacion

<h3>Modificar Incidencia</h3>

<EditForm Model="incidencia" OnValidSubmit="ModificarIncidencia">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="descInc">Descripción</label>
        <InputText id="descInc" class="form-control" @bind-Value="incidencia.DescInc" />
        <small class="form-text text-muted">Ingrese una descripción para la incidencia</small>
    </div>

    <div class="form-group">
        <label for="fechaReporte">Fecha de Reporte</label>
        <InputDate id="fechaReporte" class="form-control" @bind-Value="incidencia.FechaReporte" />
        <small class="form-text text-muted">Seleccione la fecha de reporte</small>
    </div>

    <div class="form-group">
        <label for="fechaSolucion">Fecha de Solución</label>
        <InputDate id="fechaSolucion" class="form-control" @bind-Value="incidencia.FechaSolucion" />
        <small class="form-text text-muted">Seleccione la fecha en que se espera la solución</small>
    </div>

    <button type="submit" class="btn btn-primary">Modificar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter] public int id { get; set; }
    private Incidencias incidencia = new Incidencias();

    protected override async Task OnInitializedAsync()
    {
        // Obtener la incidencia por el ID antes de mostrar el formulario
        var incidencias = await _incidenciasRepositorio.GetAllAsync();
        incidencia = incidencias.FirstOrDefault(p => p.IdIncidencias == id);

        // Si la incidencia no existe, redirigir al listado de incidencias
        if (incidencia == null)
        {
            NavigationManager.NavigateTo("/incidencias");
        }
    }

    private async Task ModificarIncidencia()
    {
        try
        {
            if (incidencia != null)
            {
                await _incidenciasRepositorio.Modificar(incidencia);
                await Notificacion.ShowSuccessAsync("La incidencia se ha modificado correctamente", "Éxito");
                NavigationManager.NavigateTo("/incidencias");
            }
        }
        catch (Exception ex)
        {
            await Notificacion.ShowErrorAsync("Ocurrió un error al modificar la incidencia", "Error");
        }
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/incidencias");
    }
}
